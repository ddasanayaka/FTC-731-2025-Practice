Read Learn Java for FTC chapters: 1, 2, 3, 4, 5, 7, 8, 19, 20
  Everyone has their own package under org.firstinspires.ftc.teamcode
  In your package, create java classes corresponding to each of the practice instructions below
  Once you finish each practice, use the commit tab to commit and push your changes (the file you created)
  Use Learn Java For FTC or any other resources as needed
==============================================================================================================


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
           REMEMBER TO PRESS "Update Project" UNDER THE "Git" TAB EVERY TIME YOU OPEN ANDROID STUDIO
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Practice 1
Write a TeleOp OpMode that writes a line of text to telemetry

Practice 2
Write an Autonomous OpMode that makes a DcMotor called "motor" spin at full power

Practice 3
Write an Autonomous OpMode that makes a DcMotor called "motor" spin in reverse at half power

Practice 4
Write a TeleOp OpMode that uses telemetry to show whether the A button on Gamepad 1 is currently pressed

Practice 5
Write a disabled OpMode of either type that resets the encoder reading of a DcMotor called "motor"

Practice 6
Write a TeleOp OpMode that displays a number on telemetry which increases when the A button on Gamepad 1 is currently pressed

Practice 7
Write a TeleOp OpMode that rotates a Servo called "servo" to any position within its range when the A button on Gamepad 1 is pressed
In the same OpMode, make "servo" rotate to any other position within its range when the X button on Gamepad 1 is pressed

Practice 8
Write a TeleOp OpMode that does the following:
    Spin a DcMotor called "motor" at full power while the A button on Gamepad 1 is pressed
    Spin a DcMotor called "motor2" at full power while the B button on Gamepad 1 is pressed
    Make both motors spin at half power when the left trigger is pressed any amount AND when each motor's corresponding button is pressed

    When the OpMode is run, it should do the following:
        "motor" spins at full power when ONLY A is pressed
        "motor2" spins at full power when ONLY B is pressed
        "motor" spins at half power when both A and left trigger are pressed
        "motor2" spins at half power when both B and left trigger are pressed

============================================================================================================================================

Final basic practice 1
Inside each of your packages, I have added a java class called "BasicPracticeFinal"
    Ignore the keyword "final" in line _, it doesn't do anything except make the icon different and more noticeable
This class contains an OpMode that will allow a 4-motor mecanum drivetrain to move in its full range of motion
    Our robot uses a 4-motor mecanum drive and will use a drivetrain OpMode similar to this practice during TeleOp
Some comments are marked as TODO, and are yellow like this:
In these comments, explain what the marked code does
The class "DrivetrainExample" contains a simplified drivetrain OpMode

Final basic practice 2
Create your own OpMode
    It can be anything that is not extremely similar to the practices
    (Don't just make a motor spin or write something to telemetry, that is too similar to the practices)
    You can add additional functionality to the existing practices, provided that it is not too similar to the practices

=====================================================================================
If you want to read more, I recommend chapters 6, 11, 12, 18, and Appendices
    These chapters are not used in the practices, but may be used later
There are also lots of programming resources for FTC elsewhere online